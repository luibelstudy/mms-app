{"version":3,"sources":["components/MenuDrawer.tsx","components/MenuActionBar.tsx","pages/analysis/Analysis.tsx","components/ActionBar.tsx","components/EditReportForm.tsx","components/ListDialog.tsx","components/ReportCard.tsx","components/ReportCardContent.tsx","components/SimpleSelect.tsx","pages/report/NewReport.tsx","pages/report/Report.tsx","pages/report/Reports.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MenuDrawer","forwardRef","ref","menuItems","selectedIndex","useState","open","setOpen","toggleDrawer","useImperativeHandle","Drawer","anchor","onClick","Box","minWidth","List","map","item","index","ListItem","component","Link","to","linkTo","button","selected","ListItemText","primary","label","useStyles","makeStyles","theme","createStyles","menuButton","marginRight","spacing","title","flexGrow","link","color","textDecoration","MenuActionBar","paths","reports","analysis","menuDrawerListener","useRef","classes","AppBar","position","Toolbar","IconButton","current","className","Typography","variant","Analysis","ActionBar","menuIcon","onClickMenus","history","useHistory","anchorEl","setAnchorEl","handleClose","edge","goBack","event","currentTarget","id","keepMounted","Boolean","onClose","MenuItem","data","name","children","EditReportTemplete","onOk","onCancel","Dialog","fullWidth","DialogTitle","display","DialogContent","TreeView","defaultCollapseIcon","defaultExpandIcon","renderTree","nodes","TreeItem","nodeId","Array","isArray","node","DialogActions","Button","ListDialog","props","items","onCanceled","value","onItemSelected","ReportCard","addButton","onClickAdd","Card","raised","CardHeader","action","Divider","ReportCardContent","onDelete","CardContent","alignItems","undefined","size","fontSize","pl","SimpleSelect","setValue","FormControl","margin","InputLabel","Select","labelId","onChange","target","NewReport","listDialog","setListDialog","editReportForm","setEditReportForm","onOkEditSupportForm","console","log","p","mb","Report","fab","bottom","right","Reports","location","useLocation","state","setState","useEffect","pathname","Fab","newReport","report","App","unstable_createMuiStrictModeTheme","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b29b764.chunk.js","sourcesContent":["import { Box, Drawer, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { forwardRef, Ref, useImperativeHandle, useState } from \"react\";\nimport { MenuItem } from \"../common/types\";\nimport { Link } from 'react-router-dom';\n\ntype Props = { menuItems: MenuItem[], selectedIndex: number };\n\nexport interface MenuDrawerListener {\n    toggleDrawer(open: boolean): void;\n}\n\nconst MenuDrawer = forwardRef(({ menuItems, selectedIndex }: Props, ref: Ref<MenuDrawerListener>) => {\n\n    const [open, setOpen] = useState(false);\n\n    function toggleDrawer() {\n        setOpen(!open);\n    }\n\n    useImperativeHandle(ref, () => ({ toggleDrawer }))\n\n    return (<>\n        <Drawer anchor=\"left\" open={open} onClick={toggleDrawer}>\n            <Box minWidth={250}>\n            <List>\n                {menuItems.map((item, index) => (\n                    <ListItem key={index} component={Link} to={item.linkTo} button selected={selectedIndex === index}>                        \n                        <ListItemText primary={item.label} />\n                    </ListItem>\n                ))}\n            </List>\n            </Box>\n        </Drawer>\n    </>);\n});\n\nexport default MenuDrawer;\n","import { AppBar, createStyles, IconButton, makeStyles, Theme, Toolbar } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { paths } from \"../App\";\nimport { MenuItem } from \"../common/types\";\nimport MenuDrawer, { MenuDrawerListener } from \"./MenuDrawer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        link: {\n            color: 'inherit', textDecoration: 'inherit',\n        },\n    }),\n);\n\ntype Props = { selectedIndex: number };\n\nexport default function MenuActionBar({ selectedIndex }: Props) {\n\n    const menuItems: MenuItem[] = [\n        { label: '리포트 리스트', linkTo: paths.reports },\n        { label: '통계 / 분석', linkTo: paths.analysis }\n    ];\n    const {label, linkTo} = menuItems[selectedIndex];\n\n    const menuDrawerListener = useRef<MenuDrawerListener>(null);\n    const classes = useStyles();\n\n    function onMenuClick() {\n        menuDrawerListener.current?.toggleDrawer(true);\n    }\n\n    return (<>\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton aria-label=\"menu\" color=\"inherit\" onClick={onMenuClick} className={classes.menuButton}>\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    <Link to={linkTo} className={classes.link}>{label}</Link>\n                </Typography>\n                <IconButton aria-label=\"search\" color=\"inherit\">\n                    <SearchIcon />\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n        <MenuDrawer menuItems={menuItems} selectedIndex={selectedIndex} ref={menuDrawerListener} />\n    </>);\n}","import MenuActionBar from \"../../components/MenuActionBar\";\n\nexport default function Analysis() {\n    return (<>\n        <MenuActionBar selectedIndex={1} />\n    </>);\n}","import { AppBar, createStyles, IconButton, makeStyles, MenuItem, Theme, Toolbar, Typography } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { useHistory } from \"react-router-dom\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useState } from \"react\";\nimport { Menu } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    link: {\n      color: 'inherit', textDecoration: 'inherit',\n    },\n  }),\n);\n\ntype Props = { title: string, menuIcon: any, onClickMenus: (() => void)[] };\n\nexport default function ActionBar({ title, menuIcon, onClickMenus }: Props) {\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);    \n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    onClickMenus[1]();\n  };\n\n  return (<>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"arrowBack\" onClick={history.goBack}>\n          <ArrowBackIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          {title}\n        </Typography>\n        <IconButton aria-label=\"search\" color=\"inherit\" onClick={onClickMenus[0]}>\n          {menuIcon}\n        </IconButton>\n        <IconButton aria-label=\"more\" color=\"inherit\" onClick={handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={handleClose}>\n      <MenuItem onClick={handleClose}>입력폼 편집</MenuItem>\n    </Menu>\n  </>);\n}","import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RestoreIcon from '@material-ui/icons/Restore';\n\ninterface RenderTree {\n    id: string;\n    name: string;\n    children?: RenderTree[];\n  }\ntype Props = { onOk: () => void, onCancel: () => void };\n\nconst data: RenderTree = {\n    id: 'root',\n    name: 'Parent',\n    children: [\n      {\n        id: '1',\n        name: 'Child - 1',\n      },\n      {\n        id: '3',\n        name: 'Child - 3',\n        children: [\n          {\n            id: '4',\n            name: 'Child - 4',\n          },\n        ],\n      },\n    ],\n  };\n  \nexport default function EditReportTemplete({ onOk, onCancel }: Props) {\n    const renderTree = (nodes: RenderTree) => (\n        <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\n          {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTree(node)) : null}\n        </TreeItem>\n      );\n\n    return (<>\n        <Dialog open={true} fullWidth onClose={onCancel}>\n            <DialogTitle>\n                <Box display=\"flex\">\n                    <Box flexGrow={1}>템플릿 편집</Box>\n                    <IconButton><RestoreIcon /></IconButton>\n                    <IconButton><DeleteIcon /></IconButton>\n                </Box>\n            </DialogTitle>\n            <DialogContent>\n                <TreeView\n                    defaultCollapseIcon={<ExpandMoreIcon />}\n                    defaultExpandIcon={<ChevronRightIcon />}>\n                    {/* <TreeItem nodeId=\"1\" label=\"고객정보\">\n                        <TreeItem nodeId=\"2\" label=\"회사명\">\n                            <TreeItem nodeId=\"3\" label=\"금오공과대학교\" />\n                            <TreeItem nodeId=\"4\" label=\"농업기술원\" />\n                            <TreeItem nodeId=\"5\" label=\"대구 중구청\" />\n                        </TreeItem>\n                    </TreeItem> */}\n                    {renderTree(data)}\n                </TreeView>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onCancel} color=\"primary\">\n                    취소\n                </Button>\n                <Button onClick={onOk} color=\"primary\">\n                    저장\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n    </>);\n}","import { Dialog, DialogTitle, List, ListItem, ListItemText } from \"@material-ui/core\";\n\ntype Props = { title: string, items: string[], onItemSelected: (value: string) => void, onCanceled: () => void };\n\nconst ListDialog = (props: Props) => {\n\n    const { title, items, onCanceled } = props;\n    \n    const onItemSelected = (value: string) => {\n        props.onItemSelected(value);        \n    };\n\n    return (<>\n        <Dialog open={true} onClose={onCanceled} fullWidth>\n            <DialogTitle>{title}</DialogTitle>\n            <List>\n                {\n                    items.map((item, index) => (\n                        <ListItem key={index} button onClick={() => onItemSelected(item)}>\n                            <ListItemText primary={item} />\n                        </ListItem>\n                    ))\n                }\n            </List>\n        </Dialog>\n    </>);\n}\n\nexport default ListDialog;","import { Card, CardHeader, Divider, IconButton } from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { ReactNode } from \"react\";\n\ntype Props = { title: string, addButton?: boolean, children: ReactNode, onClickAdd?: () => void };\n\nexport default function ReportCard({title, addButton = false, children, onClickAdd}: Props) {\n    return (<>\n        <Card raised>\n            <CardHeader title={title} action={addButton ? <IconButton onClick={onClickAdd}><AddIcon /></IconButton> : null} />\n            <Divider variant=\"middle\" />\n            {children}\n        </Card>\n    </>);\n}","import { Box, CardContent, IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { ReactNode, useState } from \"react\";\n\ntype Props = { title: string, children?: ReactNode, onDelete?: () => void };\n\nexport default function ReportCardContent({ title, children, onDelete }: Props) {\n\n    return (<>\n        <CardContent>\n            <Box display=\"Flex\" alignItems=\"flex-end\">\n                <Box flexGrow={1}>{title}</Box>\n                {\n                    onDelete === undefined || <IconButton size=\"small\" onClick={onDelete}><DeleteIcon fontSize=\"small\" /></IconButton>\n                }                \n            </Box>\n            <Box pl={2}>\n                {children}\n            </Box>\n        </CardContent>\n    </>);\n}","import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { useState } from \"react\";\n\ntype Props = { label: string, items: string[] };\nexport default function SimpleSelect({ label, items }: Props) {\n\n    const [value, setValue] = useState('');\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setValue(event.target.value as string);\n    };\n\n    return (<>\n        <FormControl fullWidth margin=\"dense\">\n            <InputLabel id={'input-label-'}>{label}</InputLabel>\n            <Select\n                labelId={'input-label-'}\n                id={'select-'}\n                value={value}\n                onChange={handleChange}\n            >\n                {\n                    items.map((item, index) => (\n                        <MenuItem key={index} value={item}>{item}</MenuItem>\n                    ))\n                }\n            </Select>\n        </FormControl>\n    </>);\n}","import { Box, Divider } from \"@material-ui/core\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport { ReactNode, useState } from \"react\";\nimport ActionBar from \"../../components/ActionBar\";\nimport EditReportForm from \"../../components/EditReportForm\";\nimport ListDialog from \"../../components/ListDialog\";\nimport ReportCard from \"../../components/ReportCard\";\nimport ReportCardContent from \"../../components/ReportCardContent\";\nimport SimpleSelect from \"../../components/SimpleSelect\";\n\nexport default function NewReport() {\n\n    const [listDialog, setListDialog] = useState<ReactNode>(null);\n    const [editReportForm, setEditReportForm] = useState<ReactNode>(null);\n\n    function onItemSelected(value: string) {\n        setListDialog(null);\n    }\n\n    function onSave() {\n        console.log('onClickSave');\n    }\n\n    function onOkEditSupportForm() {\n        \n    }\n\n    function onCreateEditSupportForm() {\n        console.log('onClickEditSupportForm');\n        setEditReportForm(\n            <EditReportForm  onOk={onOkEditSupportForm} onCancel={() => setEditReportForm(null)} />\n        );\n\n    }\n\n    function onClickAddSupportTager() {\n        setListDialog(\n            <ListDialog\n                title=\"지원 대상 선택하기\"\n                items={['WAS', 'Oracle']}\n                onItemSelected={onItemSelected}\n                onCanceled={() => setListDialog(null)} />);\n    }\n\n    function onClickAddEngineer() {\n        setListDialog(\n            <ListDialog\n                title=\"엔지니어 선택하기\"\n                items={['홍길동', '김길동']}\n                onItemSelected={onItemSelected}\n                onCanceled={() => setListDialog(null)} />);\n    }    \n\n    return (<>\n        { /* create an Component instance */}\n        {listDialog}\n        {editReportForm}        \n\n        <ActionBar title=\"새 리포트\" menuIcon={<SaveIcon />} onClickMenus={[onSave, onCreateEditSupportForm]} />\n        <Box p={2}>\n            <Box mb={2}>\n                <ReportCard title=\"기본내용\">\n                    <ReportCardContent title=\"고객정보\">\n                        <SimpleSelect label=\"고객명\" items={['홍길동']} />\n                        <SimpleSelect label=\"고객명\" items={['홍길동']} />\n                        <SimpleSelect label=\"고객명\" items={['홍길동']} />\n                    </ReportCardContent>\n                </ReportCard>\n            </Box>\n            <Box mb={2}>\n                <ReportCard title=\"지원내용\" addButton onClickAdd={onClickAddSupportTager}>\n                    <ReportCardContent title=\"WAS\" onDelete={() => {}}>\n                        <SimpleSelect label=\"고객명\" items={['홍길동']} />\n                        <SimpleSelect label=\"고객명\" items={['홍길동']} />\n                        <SimpleSelect label=\"고객명\" items={['홍길동']} />\n                    </ReportCardContent>\n                    <Divider variant=\"middle\" />\n                    <ReportCardContent title=\"Oracle\">\n\n                    </ReportCardContent>\n                </ReportCard>\n            </Box>\n            <Box mb={2}>\n                <ReportCard title=\"엔지니어\" addButton onClickAdd={onClickAddEngineer}>\n                    <ReportCardContent title=\"홍길동\">\n\n                    </ReportCardContent>\n                </ReportCard>\n            </Box>\n        </Box>\n    </>);\n}","\nexport default function Report() {\n\n    return (<>\n        \n    </>);\n}","import { Button, Fab, Theme } from \"@material-ui/core\";\nimport MenuActionBar from \"../../components/MenuActionBar\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { paths } from \"../../App\";\nimport { createStyles, makeStyles } from \"@material-ui/styles\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        fab: {\n            position: 'fixed',\n            bottom: theme.spacing(4),\n            right: theme.spacing(2),\n        },\n    }),\n);\n\nexport default function Reports() {\n\n    const classes = useStyles();\n    const location = useLocation();\n    const history = useHistory();\n    const [state, setState] = useState<number>(0);\n\n    useEffect(() => {\n        console.log('location path : ' + location.state);\n        console.log('history path : ' + history.location.pathname);\n    });\n\n    return (<>\n        <MenuActionBar selectedIndex={0} />\n        <Button color=\"primary\" onClick={() => {setState(state + 1)}}>버튼 {state}</Button>\n        <Fab color=\"primary\" aria-label=\"add\" component={Link} to={paths.newReport} className={classes.fab}>\n            <AddIcon />\n        </Fab>\n    </>);\n}","import { ThemeProvider, unstable_createMuiStrictModeTheme } from '@material-ui/core';\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Analysis from './pages/analysis/Analysis';\nimport NewReport from './pages/report/NewReport';\nimport Report from './pages/report/Report';\nimport Reports from './pages/report/Reports';\n\nexport const paths = {\n  reports: '/report/reports',\n  report: '/report/report',\n  newReport: '/report/newReport',\n  analysis: '/analysis/analysis'\n}\n\nfunction App() {\n\n  // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  // const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  // const theme = useMemo(\n  //   () =>\n  //     createTheme({\n  //       palette: {\n  //         type: prefersDarkMode ? 'dark' : 'light',\n  //       },\n  //     }),\n  //   [prefersDarkMode],\n  // );\n\n  // const [theme, setTheme] = useState<Theme>(theme1);\n\n  // window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n  //   console.log(\"theme!!\");\n  //   const newColorScheme = e.matches ? \"dark\" : \"light\";\n  //   theme.palette.type = newColorScheme;\n  //   setTheme(theme);\n  // });\n\n  const theme = unstable_createMuiStrictModeTheme();\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Switch>\n          <Redirect exact path=\"/\" to={paths.reports} />\n          <Route path={paths.reports} component={Reports} />\n          <Route path={paths.report} component={Report} />\n          <Route path={paths.newReport} component={NewReport} />\n          <Route path={paths.analysis} component={Analysis} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}